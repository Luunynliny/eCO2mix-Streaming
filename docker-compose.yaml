version: "3.8"

services:

  # Architecture

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "bash", "-c", "echo 'ruok' | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  broker:
    image: confluentinc/cp-kafka:7.5.3
    hostname: broker
    container_name: broker
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    healthcheck:
      test: [ "CMD", "bash", "-c", 'nc -z localhost 9092' ]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
#
#  elasticsearch:
#    image: elasticsearch:8.12.0
#    container_name: elasticsearch
#    environment:
#      xpack.security.enabled: false
#      discovery.type: single-node
#    ports:
#      - "9200:9200"
#
#  kibana:
#    container_name: kibana
#    image: kibana:8.12.0
#    environment:
#      ELASTICSEARCH_HOSTS: http://es-container:9200
#    depends_on:
#      - elasticsearch
#    ports:
#      - "5601:5601"

#  Flink

  jobmanager:
    image: flink:1.18.1-scala_2.12-java17
    depends_on:
      broker:
        condition: service_healthy
#      mavenbuild:
#        condition: service_completed_successfully
    container_name: jobmanager
    ports:
      - "8081:8081"
#    command: standalone-job --job-classname FlinkStreaming.DataStreamJob /opt/flink/usrlib/flink-streaming-1.0-SNAPSHOT.jar
    command: jobmanager
    volumes:
      - ./flink-streaming/target:/opt/flink/usrlib
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        parallelism.default: 2

  taskmanager:
    image: flink:1.18.1-scala_2.12-java17
    depends_on:
      - jobmanager
    container_name: taskmanager
    command: taskmanager
    volumes:
      - ./flink-streaming/target:/opt/flink/usrlib
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 4

#  mavenbuild:
#    image: maven:3.8.4-openjdk-17-slim
#    container_name: mavenbuild
#    command: mvn clean package
#    volumes:
#      - ./flink-streaming:/opt/flink/project
#    working_dir: /opt/flink/project